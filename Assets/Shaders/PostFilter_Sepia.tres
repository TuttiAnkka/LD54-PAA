[gd_resource type="VisualShader" load_steps=4 format=3 uid="uid://csgflyqc3vobq"]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_kbodk"]
source = 1

[sub_resource type="VisualShaderNodeColorFunc" id="VisualShaderNodeColorFunc_6bqjc"]
function = 3

[sub_resource type="VisualShaderNodeColorOp" id="VisualShaderNodeColorOp_4838b"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1)]
operator = 7

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform sampler2D screen_tex_frg_2 : hint_screen_texture;



void fragment() {
	vec4 n_out2p0;
// Texture2D:2
	n_out2p0 = texture(screen_tex_frg_2, SCREEN_UV);


	vec3 n_out3p0;
// ColorFunc:3
	{
		vec3 c = vec3(n_out2p0.xyz);
		float r = (c.r * .393) + (c.g *.769) + (c.b * .189);
		float g = (c.r * .349) + (c.g *.686) + (c.b * .168);
		float b = (c.r * .272) + (c.g *.534) + (c.b * .131);
		n_out3p0 = vec3(r, g, b);
	}


	vec3 n_out4p0;
// ColorOp:4
	vec3 n_in4p1 = vec3(1.00000, 1.00000, 1.00000);
	{
		float base = n_out3p0.x;
		float blend = n_in4p1.x;
		if (base < 0.5) {
			n_out4p0.x = (base * (blend + 0.5));
		} else {
			n_out4p0.x = (1.0 - (1.0 - base) * (1.0 - (blend - 0.5)));
		}
	}
	{
		float base = n_out3p0.y;
		float blend = n_in4p1.y;
		if (base < 0.5) {
			n_out4p0.y = (base * (blend + 0.5));
		} else {
			n_out4p0.y = (1.0 - (1.0 - base) * (1.0 - (blend - 0.5)));
		}
	}
	{
		float base = n_out3p0.z;
		float blend = n_in4p1.z;
		if (base < 0.5) {
			n_out4p0.z = (base * (blend + 0.5));
		} else {
			n_out4p0.z = (1.0 - (1.0 - base) * (1.0 - (blend - 0.5)));
		}
	}


// Output:0
	COLOR.rgb = n_out4p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(620, 160)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture_kbodk")
nodes/fragment/2/position = Vector2(-100, 180)
nodes/fragment/3/node = SubResource("VisualShaderNodeColorFunc_6bqjc")
nodes/fragment/3/position = Vector2(160, 200)
nodes/fragment/4/node = SubResource("VisualShaderNodeColorOp_4838b")
nodes/fragment/4/position = Vector2(400, 140)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 0, 3, 0, 4, 0, 4, 0, 0, 0)
