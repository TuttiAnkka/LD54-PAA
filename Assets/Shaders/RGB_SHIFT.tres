[gd_resource type="VisualShader" load_steps=4 format=3 uid="uid://desw8ihv5b8by"]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_pmguf"]
source = 1

[sub_resource type="VisualShaderNodeColorOp" id="VisualShaderNodeColorOp_be0yk"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(-0.2, -0.2, 0.2)]

[sub_resource type="VisualShaderNodeColorOp" id="VisualShaderNodeColorOp_nmwku"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(0.2, 0.2, 0.2)]
operator = 4

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform sampler2D screen_tex_frg_3 : hint_screen_texture;



void fragment() {
	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(screen_tex_frg_3, SCREEN_UV);


// ColorOp:4
	vec3 n_in4p1 = vec3(-0.20000, -0.20000, 0.20000);
	vec3 n_out4p0 = vec3(1.0) - (vec3(1.0) - vec3(n_out3p0.xyz)) * (vec3(1.0) - n_in4p1);


	vec3 n_out5p0;
// ColorOp:5
	vec3 n_in5p1 = vec3(0.20000, 0.20000, 0.20000);
	{
		float base = n_out4p0.x;
		float blend = n_in5p1.x;
		if (base < 0.5) {
			n_out5p0.x = 2.0 * base * blend;
		} else {
			n_out5p0.x = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base = n_out4p0.y;
		float blend = n_in5p1.y;
		if (base < 0.5) {
			n_out5p0.y = 2.0 * base * blend;
		} else {
			n_out5p0.y = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base = n_out4p0.z;
		float blend = n_in5p1.z;
		if (base < 0.5) {
			n_out5p0.z = 2.0 * base * blend;
		} else {
			n_out5p0.z = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}


// Output:0
	COLOR.rgb = n_out5p0;


}
"
graph_offset = Vector2(155.872, 109.855)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(800, 120)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_pmguf")
nodes/fragment/3/position = Vector2(40, 160)
nodes/fragment/4/node = SubResource("VisualShaderNodeColorOp_be0yk")
nodes/fragment/4/position = Vector2(340, 180)
nodes/fragment/5/node = SubResource("VisualShaderNodeColorOp_nmwku")
nodes/fragment/5/position = Vector2(580, 160)
nodes/fragment/connections = PackedInt32Array(3, 0, 4, 0, 4, 0, 5, 0, 5, 0, 0, 0)
